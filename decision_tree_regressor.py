# -*- coding: utf-8 -*-
"""decision tree regressor

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1AjLUPfnACp8qLoy_0cOdHkj8X5f3XVvD
"""

import  numpy as np
import pandas as pd
from sklearn.tree import DecisionTreeRegressor
from sklearn.model_selection import train_test_split
from sklearn.metrics import mean_squared_error, r2_score
import pandas as pd
import matplotlib.pyplot as plt
import matplotlib.pyplot as plt

# Load your dataset (replace 'your_dataset.csv' with the actual file name)
data = pd.read_csv("/content/Salary_Data.csv")

# Assuming 'YearsExperience' is your independent variable and 'Salary' is your dependent variable
# Replace these with your actual column names if different
X = data[['YearsExperience']]
y = data['Salary']

# Split the data into training and testing sets
X_train, X_test, y_train, y_test = train_test_split(X, y, test_size=0.2, random_state=42)

# Create and train the decision tree regression model
model = DecisionTreeRegressor(random_state=42)  # You can adjust hyperparameters here
model.fit(X_train, y_train)
# Make predictions on the test set
y_pred = model.predict(X_test)

# Evaluate the model
mse = mean_squared_error(y_test, y_pred)
r2 = r2_score(y_test, y_pred)

print(f"Mean Squared Error: {mse}")
print(f"R-squared: {r2}")

# Plot the results
plt.figure(figsize=(8, 6))
plt.scatter(X_test, y_test, color='blue', label='Actual')
plt.plot(X_test, y_pred, color='red', label='Predicted')
plt.xlabel('Years of Experience')
plt.ylabel('Salary')
plt.title('Decision Tree Regression')
plt.legend()
plt.show()